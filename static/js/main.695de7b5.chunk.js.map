{"version":3,"sources":["component/profile.js","App.js","serviceWorker.js","index.js"],"names":["Profile","Card","style","backgroundColor","Body","Avatar","alt","src","Component","App","props","state","windowWidth","windowHeight","this","updateDimensions","window","addEventListener","bind","removeEventListener","innerWidth","innerHeight","setState","styles","showSidebar","Container","fluid","Row","Col","md","Nav","defaultActiveKey","className","Link","href","eventKey","maxWidth","Header","as","Title","Text","Button","variant","BottomNavigation","width","position","bottom","showLabels","BottomNavigationAction","label","value","icon","Home","PeopleAlt","Receipt","Notifications","Work","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.695de7b5.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Container, Row, Col, Image, Card } from \"react-bootstrap\";\r\nimport {Avatar} from \"@material-ui/core\"\r\n\r\nexport default class Profile extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <Card style={{backgroundColor: `rgba(0, 0, 0, 0.8)`}}>\r\n                    <Card.Body>\r\n                        <Avatar alt=\"Remy Sharp\" src=\"avatar.jpg\" />\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Navbar, Nav, Form, FormControl, Button, Card, Col, Row, Container } from \"react-bootstrap\"\nimport Profile from \"./component/profile\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BottomNavigation, BottomNavigationAction, Container as MContainer } from \"@material-ui/core\"\nimport { Home, PeopleAlt, Receipt, Notifications, Work } from \"@material-ui/icons\"\nimport { makeStyles } from '@material-ui/core/styles'\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      windowWidth: 0,\n      windowHeight: 0\n    };\n  }\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  updateDimensions() {\n    let windowWidth = typeof window !== \"undefined\" ? window.innerWidth : 0;\n    let windowHeight = typeof window !== \"undefined\" ? window.innerHeight : 0;\n\n    this.setState({ windowWidth, windowHeight });\n  }\n\n\n  render() {\n\n    const styles = {\n      showSidebar: this.state.windowWidth > 800,\n    };\n    \n\n\n    return (\n      <div>\n        <Profile />\n        <Container fluid>\n          <Row>\n            {styles.showSidebar && (\n              <Col md=\"auto\">\n                <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\n                  <Nav.Link href=\"/home\">Home</Nav.Link>\n                  <Nav.Link eventKey=\"link-1\">my Follows</Nav.Link>\n                  <Nav.Link eventKey=\"link-2\">NEWS</Nav.Link>\n                  <Nav.Link eventKey=\"link-2\">Notification</Nav.Link>\n                  <Nav.Link eventKey=\"link-2\">Work</Nav.Link>\n\n                </Nav>\n              </Col>\n            )}\n            <Col>\n              <MContainer maxWidth=\"lg\">\n\n                <Card>\n                  <Card.Body>\n                    <Card >\n                      <Card.Header as=\"h5\">งานที่เหมาะกับคุณ</Card.Header>\n                      <Card.Body>\n                        <Card.Title>Special title treatment</Card.Title>\n                        <Card.Text>\n                          With supporting text below as a natural lead-in to additional content.\n              </Card.Text>\n                        <Button variant=\"primary\">Go somewhere</Button>\n                      </Card.Body>\n                    </Card>\n                    <Card >\n                      <Card.Header as=\"h5\">Your FOLLOWS</Card.Header>\n                      <Card.Body>\n                        <Card.Title>Special title treatment</Card.Title>\n                        <Card.Text>\n                          With supporting text below as a natural lead-in to additional content.\n              </Card.Text>\n                        <Button variant=\"primary\">Go somewhere</Button>\n                      </Card.Body>\n                    </Card>\n                    <Card >\n                      <Card.Header as=\"h5\">งานที่เหมาะกับคุณ</Card.Header>\n                      <Card.Body>\n                        <Card.Title>Special title treatment</Card.Title>\n                        <Card.Text>\n                          With supporting text below as a natural lead-in to additional content.\n              </Card.Text>\n                        <Button variant=\"primary\">Go somewhere</Button>\n                      </Card.Body>\n                    </Card>\n                    <Card >\n                      <Card.Header as=\"h5\">งานที่เหมาะกับคุณ</Card.Header>\n                      <Card.Body>\n                        <Card.Title>Special title treatment</Card.Title>\n                        <Card.Text>\n                          With supporting text below as a natural lead-in to additional content.\n              </Card.Text>\n                        <Button variant=\"primary\">Go somewhere</Button>\n                      </Card.Body>\n                    </Card>\n                    <Card >\n                      <Card.Header as=\"h5\">งานที่เหมาะกับคุณ</Card.Header>\n                      <Card.Body>\n                        <Card.Title>Special title treatment</Card.Title>\n                        <Card.Text>\n                          With supporting text below as a natural lead-in to additional content.\n              </Card.Text>\n                        <Button variant=\"primary\">Go somewhere</Button>\n                      </Card.Body>\n                    </Card>\n                  </Card.Body>\n                </Card>\n\n              </MContainer>\n\n              {!styles.showSidebar && (\n                <BottomNavigation style={{\n                  width: '100%',\n                  position: 'fixed',\n                  bottom: 0,\n                }}\n\n                  // value={value}\n                  // onChange={(event, newValue) => {\n                  //   setValue(newValue);\n                  // }}\n                  showLabels\n                  // className={classes.root}\n                >\n                  <BottomNavigationAction label=\"Home\" value=\"Home\" icon={<Home />} />\n                  <BottomNavigationAction label=\"myFollows\" value=\"myFollows\" icon={<PeopleAlt />} />\n                  <BottomNavigationAction label=\"News\" value=\"News\" icon={<Receipt />} />\n                  <BottomNavigationAction label=\"Notification\" value=\"Notification\" icon={<Notifications />} />\n                  <BottomNavigationAction label=\"Work\" value=\"Work\" icon={<Work />} />\n                </BottomNavigation>)}\n            </Col>\n          </Row>\n        </Container>\n\n\n\n\n\n      </div >\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}